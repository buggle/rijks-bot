---
http_interactions:
- request:
    method: get
    uri: https://www.rijksmuseum.nl/api/en/collection?culture=en&format=json&imgonly=true&key=<RIJKSMUSEUM_API_KEY>&p=&ps=100&q=Mermaid
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 22 May 2018 00:00:29 GMT
      Set-Cookie:
      - rmtc=WwNdngq5Lt0AADNRvNsAAAEH; path=/
      Cache-Control:
      - no-store, must-revalidate, no-cache
      Pragma:
      - no-cache
      Content-Type:
      - application/json; charset=utf-8
      Access-Control-Allow-Origin:
      - "*"
      Request-Context:
      - appId=cid-v1:e424d2a2-13b5-4836-82bb-d9f4bdcde3ba
      X-Frame-Options:
      - DENY
      Content-Length:
      - '107703'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        {
  "elapsedMilliseconds": 0,
  "count": 76,
  "countFacets": {
    "hasimage": 76,
    "ondisplay": 4
  },
  "artObjects": [
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/NG-1980-27-H-1645-A",
        "web": "https://www.rijksmuseum.nl/en/collection/NG-1980-27-H-1645-A"
      },
      "id": "en-NG-1980-27-H-1645-A",
      "objectNumber": "NG-1980-27-H-1645-A",
      "title": "Pijpenkop uit het wrak van de Oost-Indiëvaarder Hollandia",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Pijpenkop uit het wrak van de Oost-Indiëvaarder Hollandia, anonymous, 1700 - in or before 1743",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "c52261b2-bb9d-4944-acc7-919d8ef3a468",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1260,
        "height": 1260,
        "url": "https://lh3.googleusercontent.com/m_S-RsXka-GRh-8iOe-lvTNriyHse7EaLGcYSLDnBRMcMGOAg_GqWAv-alm1NuGggg6W4jPIeU79G7RbBe8DOi7STA"
      },
      "headerImage": {
        "guid": "5cbdccac-6c34-4925-948c-e8b86f4daa53",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 453,
        "height": 453,
        "url": "https://lh3.googleusercontent.com/JqbZ0yp8QcvltiASGcRlrbykbtHeef9IhMNiQCAYzjUh9cc25hvGcEOzYIXM2AAo-t0kMApBRnHj8oxOUSFcCHhhSLdQ"
      },
      "productionPlaces": [
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/NG-1980-27-H-1637-C",
        "web": "https://www.rijksmuseum.nl/en/collection/NG-1980-27-H-1637-C"
      },
      "id": "en-NG-1980-27-H-1637-C",
      "objectNumber": "NG-1980-27-H-1637-C",
      "title": "Pijpenkop uit het wrak van de Oost-Indiëvaarder Hollandia",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Pijpenkop uit het wrak van de Oost-Indiëvaarder Hollandia, anonymous, 1700 - in or before 1743",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "fe84de18-edd5-40d1-95dc-9bf22541f3b2",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1260,
        "height": 1260,
        "url": "https://lh3.googleusercontent.com/6lrLdwey_tC891R0oZw8KWB_DlNiJ4_gPE1l-SiaAVcnyyFJqgv5d7gg7Ex3Xm7ntP-V1ZtuCJoUf7Qt6bdVniWMjprw"
      },
      "headerImage": {
        "guid": "66e51b56-0a33-4313-842b-511ddea419e8",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 453,
        "height": 453,
        "url": "https://lh3.googleusercontent.com/zrrMcd2Fh6DFdL1OGSwxZBwf4D4cxH9MmOZzi-_E28_SECkQ_CoheCfX-07Pnn8mtQ1I6QmPph3BJSV2ZOXi10lU1JE"
      },
      "productionPlaces": [
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1973-9",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1973-9"
      },
      "id": "en-RP-P-1973-9",
      "objectNumber": "RP-P-1973-9",
      "title": "Vrouw met vissenstaart en hoed met pluim",
      "hasImage": true,
      "principalOrFirstMaker": "Odilon Redon",
      "longTitle": "Vrouw met vissenstaart en hoed met pluim, Odilon Redon, 1900",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "20fdfd2d-2792-49f9-9d18-6e1a4d9873e1",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2584,
        "height": 2584,
        "url": "https://lh5.ggpht.com/t0gaquQ7j557AV_hMupQSUpPxYE1M01jWyNcmrLguvFGBDfUXP4iEwkoSSoIMQohExHO9osHDBjEL92SwV_izb-waw"
      },
      "headerImage": {
        "guid": "7dc8f3e6-2f66-4c3f-80e8-8bcf9fac2688",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh5.ggpht.com/uwdhl8XGi3o3m0uGWYTMNTuhQUwfUDVAhuA5zSV7rjjVAnNwujpKlVKdXBehNAbFUQpl89McbEiaHK88UrSqsuHOT-f7"
      },
      "productionPlaces": [
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1935-1386",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1935-1386"
      },
      "id": "en-RP-P-1935-1386",
      "objectNumber": "RP-P-1935-1386",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ae1743d8-0013-473c-ade0-b004193e8351",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/5BURDmkI-kJSTaczAoGULQ2H8z4nlEkrLqRrMhykh-rq7Ukowre49Ur_ETUTLMm8z7RjpnCjATmYrjr14SBTpyaVogQ"
      },
      "headerImage": {
        "guid": "e67e72b3-b208-4a83-9e7d-50aedc4e04dc",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/ZUOV9Jb7Ly7ktTHYL8kQUzch0a9rDjcbmw9SBK-5c5pRLnaQcsIF3kTAcD74oEeS9xxV1TG3tjNmCuyEHPmJN8yPDgg"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1937-592",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1937-592"
      },
      "id": "en-RP-P-1937-592",
      "objectNumber": "RP-P-1937-592",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "4e67c73a-8be8-4154-9e57-07c2f9cfa50a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/Fr3Tv8W1GDI3vkAWAIx9nIg-BQe7rvG0bcUEftdvOy-JJOPwyBPHokKDW7R1sR2W9uMDS9jprh0cD-ZkhQGql0lEgrU"
      },
      "headerImage": {
        "guid": "dca40c8d-c3cb-49cf-8cdc-27350b44060a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/ihSRiOLgnmC1xw2fX1yEJwHbSNAnMQJ89VSd6qDQ3traWvtIIjuNT-izuGPfr1QBIlXrpq7m5OrOR690kovroXjgPsg"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1935-1388",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1935-1388"
      },
      "id": "en-RP-P-1935-1388",
      "objectNumber": "RP-P-1935-1388",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "8dc9e580-8bb5-484d-8b02-fbae7cfa8e35",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/uX48BjMsvhdwmonqRlZTw9dp8KB8zFT3YTSPyWrdZ-z3AKZJCnOiZKi1vCvwYMWmmsE4t6pFEIaK9022Cpxjjlr8nkQ"
      },
      "headerImage": {
        "guid": "52c1263b-ad42-4380-9706-c22f60e0d6e4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/xuVf2FAMYneJDWyIN10ILjr9vzKxaYH1DDb0oyfPZO8N0gHWxzEQ0xwFlIvCWn9VVE6_ypW7F6R_-qP5jyHvEIiHdQ"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1937-552",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1937-552"
      },
      "id": "en-RP-P-1937-552",
      "objectNumber": "RP-P-1937-552",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "b908e9d3-e66b-4f9f-8e92-95326150f770",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/eG5Ch1VKDVA_Q-j6-LKHaZWPebQUa1EPzI4tcOBSltnDFpdh-bR-d8uYYHR5-iigMSzoHV3aSKeeI5w0armU205nCQ"
      },
      "headerImage": {
        "guid": "719c49ea-1b89-42bb-a762-e911f26a8159",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/lbGj53wZ9P7JShLoh10ZKB2BcmVS0siLC8BcShYIhOBFr8aoZP6VqmABAQJ1TUI6IIxrF8QJ3tIcNETPGvJbNf3QHXhc"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-83.869",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-83.869"
      },
      "id": "en-RP-P-OB-83.869",
      "objectNumber": "RP-P-OB-83.869",
      "title": "Allegorie op de Franse aanval op de Republiek en de verheffing van Willem IV tot stadhouder, 1747",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Allegorie op de Franse aanval op de Republiek en de verheffing van Willem IV tot stadhouder, 1747, anonymous, 1747",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0701a163-4d3c-4d35-b1d4-916446894ea5",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh6.ggpht.com/nitBO0w8HDwt1amI1WnSZ8PDio63o9jgXnm3_4vzI3sYTV4EaT-4ipz4iJNIMnr5lWMhWlS_gkxseSXD8A45p0nidSk"
      },
      "headerImage": {
        "guid": "6037a242-79b9-4fea-a6e3-fbbbf2a39774",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/v5nHLbx8SLPrUaE-ZNgsNy98auUTZykRnsKopT7OM587JjatfL99iHsCltiwzNygwTdeMAioHSQvNfUNdhRBKR-w0A"
      },
      "productionPlaces": [
        "Northern Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1935-1384",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1935-1384"
      },
      "id": "en-RP-P-1935-1384",
      "objectNumber": "RP-P-1935-1384",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "1dd96363-96a5-427e-aa35-c4d7991f5d2c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/cP0Rt3FbeqfVOqsst4_POWMgG0s3MtSXQ2zIqoiXyl1Q2jwrFXgWP9NPmcKNgI6dF4fcriapno_ihn3xo75_wTGHveU"
      },
      "headerImage": {
        "guid": "3a68db1b-8b5e-4e3d-b89f-021444f3a00a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/iRuelgjLkxsCbE7Hfzn6HNIukFwO41m_SZ1cXbhqch6CCP9VpQmJsd_KJOPjrwmIaM4WrRgQ6kS4IDzZXqQgUkeHrWI"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1935-1387",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1935-1387"
      },
      "id": "en-RP-P-1935-1387",
      "objectNumber": "RP-P-1935-1387",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "370b3787-6ad9-47aa-9f27-8c2c1bf77dc6",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/mIuYfVcVhsbnbkGzoQwcX7qDFPYR3IgdxllDdYUb881aDiC01lAyX_FfweoNTDCSH1WIPmMZ1ciDa8XEqSmeNUGjAfc"
      },
      "headerImage": {
        "guid": "f072ac5b-0fcd-43c6-9b59-f4b7684282d4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/EXkiQk4DCTiT3tVm3SFHSioZqXYg4Vdu7VwVj-weizPpi9mR3BHE_LM1s5oe7SmARycm4wFrgiW0wTiiDG3TGH0pCnE"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1935-1385",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1935-1385"
      },
      "id": "en-RP-P-1935-1385",
      "objectNumber": "RP-P-1935-1385",
      "title": "Vijf zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Johannes Josephus Aarts",
      "longTitle": "Vijf zeemeerminnen, Johannes Josephus Aarts, 1881 - 1934",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "73a3859f-6411-4675-8a6c-ad977117e20c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/ibjX6_GybqyhoI4kdRRk8HAdSzDWEEQwrfIROFMhri7qHWklwDZXKEH-wySabL_G6EV5WWOC_p3PJuw-zjv5r-Y5i6g"
      },
      "headerImage": {
        "guid": "5dbc177e-01e4-4d3e-8c55-f2e7e0f39e28",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/kp_hw6ah6uBs8WNDHfvT7aHjdOMD4eBOwBk_EyZaV8WUcZPZkR4kbqcfIRlTGHYkoCxYRK71wkUpjIJOUiD3AwMUIA"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-2015-53-8-25",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-2015-53-8-25"
      },
      "id": "en-RP-P-2015-53-8-25",
      "objectNumber": "RP-P-2015-53-8-25",
      "title": "Zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "Damiano Pernati",
      "longTitle": "Zeemeermin, Damiano Pernati, 1804",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "e16fd5de-ca39-41f0-8d43-522a45674888",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/QL9SdbWmBZE_Sf17zpSc545wgf3aLPVuj5_csPj583zlqJxkVSu4qgwvgG6MBMnxpa726HVx-eXPnDkqOasX9EtMKdA"
      },
      "headerImage": {
        "guid": "4d0009eb-6542-4e70-a3ff-271599886f29",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/MbSONzdErKhtTziUBaA9c-VANHxLC7-yLS6fwg0WFeYBRUX3eFCM9r4UonVdKiQUDwvhWi_ciAiGEIsvTOJARuQb9UY"
      },
      "productionPlaces": [
        "Italy"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1950-317A",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1950-317A"
      },
      "id": "en-RP-P-1950-317A",
      "objectNumber": "RP-P-1950-317A",
      "title": "Zeemeerman en zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Zeemeerman en zeemeermin, anonymous, 1486 - 1493",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "1b426273-fbd4-409d-ba28-d63615d8949d",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1805,
        "height": 1805,
        "url": "https://lh3.googleusercontent.com/I0oE__YDr-4TLT8tKMXQKnibRD5dr6u_rQ7gh801MLAKmqz1x5r2IamxC3AkP9jX3FXnx033jfUf_ADxUhv066kTG2YI"
      },
      "headerImage": {
        "guid": "211ff5c1-71c9-44c7-bfa4-c83e61b5270c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 376,
        "height": 376,
        "url": "https://lh3.googleusercontent.com/v-NPflTEa_CJ9ZZidSJzUsyYWg0Z77qYPTNK4fcdcykQrMBO9zSyC5e-O18MPlTKC-xeIFx2mT_GQALHdBjYAI15tXU"
      },
      "productionPlaces": [
        "Germany"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-5214",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-5214"
      },
      "id": "en-RP-P-OB-5214",
      "objectNumber": "RP-P-OB-5214",
      "title": "Fabel van de zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "Aegidius Sadeler",
      "longTitle": "Fabel van de zeemeermin, Aegidius Sadeler, 1608",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "5779eb70-5502-4f84-9fc0-10d1dbfde82f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2134,
        "height": 2134,
        "url": "https://lh6.ggpht.com/uj0uH_H2usRfTXaJ4FnK5gF-SDNqanNZ5U7x8xvLyQh9CfQeQNdCBrNp2lrJH4y9rM2Ow0eVNf4YQ37AVuYK7Ol-TNg"
      },
      "headerImage": {
        "guid": "e370ffd6-b003-4e6c-a4db-c77161520986",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh5.ggpht.com/xxXg9i_AUQrg5CvxznnZDSsaC4ix4bY3Hoz0RnFVGzj7-BDmXThP7ts6aXBCFhpHZ5-tjac_FRcXC6p3tRYzkcJcDdA"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-F-F80187",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-F-F80187"
      },
      "id": "en-RP-F-F80187",
      "objectNumber": "RP-F-F80187",
      "title": "Toegangspoort met zeemeerminnen aan de Lakhigate van Qaisar Bagh in Lucknow",
      "hasImage": true,
      "principalOrFirstMaker": "Samuel Bourne",
      "longTitle": "Toegangspoort met zeemeerminnen aan de Lakhigate van Qaisar Bagh in Lucknow, Samuel Bourne, 1865 - 1872",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "fae08416-0930-4741-aa4f-0ab2de59ca41",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2057,
        "height": 2057,
        "url": "https://lh4.ggpht.com/6-N_SC8IPlm6dRpT5bjnMJ0MJiKPq1bxBB3IJh_AAznnJCVgL6maB5U_ht1aYb1uMXalPXb4RKw4WjYQm-1NJKOiwOc"
      },
      "headerImage": {
        "guid": "b480f021-225c-4e29-98b5-88ef8150ec2b",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/m6wXSovTg05tu313sMjORrNVk_NGs8Hv5c5mLd2RGeoXkYQMEaNwrga4E3Z3a5PNSVsDzLTzmOWgtzb6SVgiiNlXctQ4"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-5759",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-5759"
      },
      "id": "en-RP-P-OB-5759",
      "objectNumber": "RP-P-OB-5759",
      "title": "Sirene tussen twee schepen",
      "hasImage": true,
      "principalOrFirstMaker": "Jacques Callot",
      "longTitle": "Sirene tussen twee schepen, Jacques Callot, 1646",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "a73295f8-30ed-47f6-a6bb-35f1f9d73dc2",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2730,
        "height": 2730,
        "url": "https://lh6.ggpht.com/aaW7rVa2cnRLQS8r2sXFeNCO4J4Es3MosG7QTI_xT__GPrirXrcfLCOJNMlDXaTaMzOyIHkHyGzXUoGDGD-Dav_1NKg"
      },
      "headerImage": {
        "guid": "c0f2c63c-6833-4d99-a04a-68d724aabaf0",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh6.ggpht.com/CWfssLrmNmBoCLkgdXN2p-_Dd7cfWQ1p5ujWQTobZv5H79gx3xvXMbDD0ibLis9_RQDSziU6QCV3V-rZfKQA60xw31U"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-5758",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-5758"
      },
      "id": "en-RP-P-OB-5758",
      "objectNumber": "RP-P-OB-5758",
      "title": "Sirene tussen twee schepen",
      "hasImage": true,
      "principalOrFirstMaker": "Jacques Callot",
      "longTitle": "Sirene tussen twee schepen, Jacques Callot, 1621 - 1635",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "f1614f9e-5b5f-4cea-88e9-1676d1c0e60c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2069,
        "height": 2069,
        "url": "https://lh3.ggpht.com/aIUfjTv-gfDOxG7RjVzoZ05_Yex0X2UCrzjSaSXQMjI8VIZO2y3Of74eEAm2IQJgGOjRPfAl0CslkSpXO19Fnd0Np9PV"
      },
      "headerImage": {
        "guid": "c661ad89-aa5c-4a7c-881c-48879b6dad79",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh6.ggpht.com/gX-4VJw2VBw1cdHNK0vFOCW-5-sc4qj-HYuqqfUE7GxQOmRHZjpRQo0Hhxu2e8gs5ybF5WrpdSoTE-jnVOTqcHR2Ai8"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/BK-16921",
        "web": "https://www.rijksmuseum.nl/en/collection/BK-16921"
      },
      "id": "en-BK-16921",
      "objectNumber": "BK-16921",
      "title": "Beker met een arcadenfries en hybride wezens",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Beker met een arcadenfries en hybride wezens, anonymous, c. 1850 - c. 1900",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "51908b5c-d974-4310-9dbb-fffd56ce5bee",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 3000,
        "height": 3000,
        "url": "https://lh3.googleusercontent.com/PsraqeT8isJLTU516iE5uPOG9THeXqSJyTilrlHnu1qbnysW1C7FoqFqKH3NPImR4BAZk8dU50fAj3lb41umPURB3g"
      },
      "headerImage": {
        "guid": "ec50eb60-8ee9-4adb-84cf-753e3abd1251",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/uyicmuFXJNd99OkxeRK3aFwHKPNwfWzmLhGTr4ET1uvPQDsFoXek254lb9u0aoffJJsJXaJsIDlqUBpPPClK_AtPJg"
      },
      "productionPlaces": [
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1953-175",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1953-175"
      },
      "id": "en-RP-P-1953-175",
      "objectNumber": "RP-P-1953-175",
      "title": "Titelprent met een triton en een zeenimf met schelp",
      "hasImage": true,
      "principalOrFirstMaker": "Stefano della Bella",
      "longTitle": "Titelprent met een triton en een zeenimf met schelp, Stefano della Bella, 1620 - 1664",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "62449c0e-a801-4c4f-b170-d1f983b6a959",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 848,
        "height": 848,
        "url": "https://lh3.googleusercontent.com/iITBrMcl2NeO7x-P9rr3NQvkm0MT9FQSC744C4xDvq2qD0xMyMJq6ijzmv6yFRUpK87znZ5Kvd4IcbtZ1OBMDK28RWQ"
      },
      "headerImage": {
        "guid": "df74a9e2-4e35-469d-8045-ec20daaf62c9",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/oyWuQtAckpFNaWdqXug1WI4cggvzQ29nX6yF7HHF2-AWNnaKXRMnNUh9MRwJp-At04dFFOWjaeEph2lOaOYT5adPAw"
      },
      "productionPlaces": [
        "France",
        "France",
        "Paris",
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-3763",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-3763"
      },
      "id": "en-RP-P-1964-3763",
      "objectNumber": "RP-P-1964-3763",
      "title": "Bad met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Nicolas Dupin",
      "longTitle": "Bad met meerminnen, Nicolas Dupin, 1772 - 1779",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ec22a60e-ec00-464b-9a1a-4b7ca148867a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1598,
        "height": 1598,
        "url": "https://lh3.googleusercontent.com/FCndnTlZgYyuqQ1E-espMq8adZPzHf5m-E1_gD2IlkEdwe8oEggndZn_75_rQ7ki3Hslc7R8eJ4CeLX31ktZ1sTxh4E"
      },
      "headerImage": {
        "guid": "44ea6b78-bc3e-4576-8e7d-94b099d5af1a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/-Q7pasSIQN19EwABVwRCQsdcHN96313YoY6MmPDysGC0MrehDWptSDkp-BpCkGh4ni-YAjzx-ElMsFdyHEksJ5QAWb4"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1938-704",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1938-704"
      },
      "id": "en-RP-P-1938-704",
      "objectNumber": "RP-P-1938-704",
      "title": "Titelprent met een triton en een zeenimf met schelp",
      "hasImage": true,
      "principalOrFirstMaker": "Stefano della Bella",
      "longTitle": "Titelprent met een triton en een zeenimf met schelp, Stefano della Bella, 1620 - 1664",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "40e59a82-82ef-484a-8ffa-c2d9f085c1c4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 816,
        "height": 816,
        "url": "https://lh3.googleusercontent.com/OHgWz2w3W1ZPXZuvvGKy5924cWbmrbmSOyYGBXs08aSnYGe-XEbPmbVl7y_i1RvcMjj9oYJw_5v4E_TYP4B5qBWJkl4"
      },
      "headerImage": {
        "guid": "fd86806b-579b-402e-97dd-906150b5c536",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/93BbRXflODm9phcRvMH422HbBemZlk_6k8my_oDxKvfM2g2laNUpzpGK_dctW9aMDtAUurRzoDEd1NjRW3j2eCNjmgA"
      },
      "productionPlaces": [
        "France",
        "France",
        "Paris",
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1965-534",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1965-534"
      },
      "id": "en-RP-P-1965-534",
      "objectNumber": "RP-P-1965-534",
      "title": "Sieraad met meermin",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Sieraad met meermin, anonymous, in or before 1810",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0ad6e5b7-7ef6-461b-9c92-5694bddde99b",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2154,
        "height": 2154,
        "url": "https://lh3.googleusercontent.com/CU-NoJ-LM1cQkmEMrZdJFSvwDPcwPgpTIwJwXKoDGoKQuZ97c77M9nrkNEShtRn_wBd17qp3TRhQ7lAWh7uAsXj4wXTv"
      },
      "headerImage": {
        "guid": "f0ec7e73-0d44-4584-a49f-4b670794b220",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/IYScaWZcWYZypeZRlJyXTO-Al1k1tRVg29Hl4o1epBe3N2945s-fbxX7SI-MudpzPMoFX93piGmVddMPWrJhBeGmUBY"
      },
      "productionPlaces": [
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1966-240",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1966-240"
      },
      "id": "en-RP-P-1966-240",
      "objectNumber": "RP-P-1966-240",
      "title": "Fontein met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Fontein met meerminnen, anonymous, 1738 - 1749",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "8158ed8b-5f82-4fc1-a7f7-09fdd33b9445",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/YkBhhj4hBG8koarq-_zo_uSIekXUtBzdbqM5hLuy5baOnO45gWImzKEED_bm2qmzhG39fpS5STUyWtXLv3gRDE6hT4E"
      },
      "headerImage": {
        "guid": "1405b0cc-b447-4db2-a53c-c8af017156e5",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/yvw4qYX_k4luOtPvBLv6Rr51C_VRa5elW7R6ROYvntvHyexTn-DWof2mSgopBGOgArp0h9oeFHD5SdDkLqDkt-E_k8qH"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-T-1969-738-8(R)",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-T-1969-738-8(R)"
      },
      "id": "en-RP-T-1969-738-8(R)",
      "objectNumber": "RP-T-1969-738-8(R)",
      "title": "Ornament met een zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "Carel Adolph Lion Cachet",
      "longTitle": "Ornament met een zeemeermin, Carel Adolph Lion Cachet, c. 1905 - c. 1910",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "5219068b-5169-4ed1-beb0-a1b09d86430f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1825,
        "height": 1825,
        "url": "https://lh3.googleusercontent.com/R-fTJVTQiFYT3FUEZzouvbH8ipNZ6nmUY-IoY3Pflr0lmpkjZKexGoHND6tVgOZa9OFALw5VE_wXB0gfCiOYlcsRHKU"
      },
      "headerImage": {
        "guid": "2ca4b6a2-666f-4e40-8fbe-9a9d6c98bc4a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/122UKZZ8eQtEpC8oMcn6C-5nc0b6Qw9SuGP-XTPFBh2yMkmBz3bHPRMoo97jSRuzVhhPgB4p5skNRi9IC-SIwBt80kQ"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1908-5473",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1908-5473"
      },
      "id": "en-RP-P-1908-5473",
      "objectNumber": "RP-P-1908-5473",
      "title": "Vaas met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "L. Laurent",
      "longTitle": "Vaas met meerminnen, L. Laurent, 1775 - 1785",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "1dc54f94-5716-4cc7-842e-ae2f7625335f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/pb298uo4vieTQ-ac7MDBDKhC-CGXjcRGUmzPjGdNwWbZsjj650FhvbZJYVhke_X3eU3XTakQO9fShwiaGfzbD-jKH-U"
      },
      "headerImage": {
        "guid": "3e95642c-12a8-4c92-ac69-71105e87f3b8",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 384,
        "height": 384,
        "url": "https://lh3.googleusercontent.com/FGxyJfVFNgwr3ACQAXtq5cOzaztAAAdr6-yjLgX18WR6Rn2UiBePwV_55ISE4XNbyUdXtyAjPVctqj-BKq6XQJDvYA"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1888-A-13851",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1888-A-13851"
      },
      "id": "en-RP-P-1888-A-13851",
      "objectNumber": "RP-P-1888-A-13851",
      "title": "Vaas met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Jacques Juillet",
      "longTitle": "Vaas met meerminnen, Jacques Juillet, 1768",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "a80dc669-9c9d-4671-9474-463854df9370",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/uswg_UfF69SDUPE4UQJKFBQwOYZvL6xFVGOGlMSBOI1TpaJ-SaPcnYsHhPUv2pTrJWK5dsniIeR3HiWT4N2ZVzuhW_lI"
      },
      "headerImage": {
        "guid": "6daff77d-896f-42be-a8dd-a573a3144b70",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/xEKveJf6T_U3WlmrffezN0F5GEPx3Nq6locSJy5AnVqKV_gn4NZy1pXp5yykMbNT7fsKRfkK0TPnYyTFHA3QNn2ijd8"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1886-A-11041",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1886-A-11041"
      },
      "id": "en-RP-P-1886-A-11041",
      "objectNumber": "RP-P-1886-A-11041",
      "title": "Nis met het standbeeld van een zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "Caspar Jacobsz. Philips",
      "longTitle": "Nis met het standbeeld van een zeemeermin, Caspar Jacobsz. Philips, 1774",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "e2960e54-3940-4956-b7de-c3690e175a54",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh5.ggpht.com/_-Sz1H-3XQEutRnDVFKJ35mDQAe2NyaxuEMAtgU01-iBykeF-SP1XCxbGMSiU4MX1Xuz7WW5OxWMJ_K0BziedBBEwLw"
      },
      "headerImage": {
        "guid": "facecd54-9367-4f8d-8c42-8b24c5a29ce2",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/COPnnB1UBtXUxhN8QY5jvJMCKIoEztCTrV85kyAa1V2MJpms6vdzrgAuRRQkkoC1E0phc3nNPz7GsCwyxe1ugGSumvQ"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-T-00-148",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-T-00-148"
      },
      "id": "en-RP-T-00-148",
      "objectNumber": "RP-T-00-148",
      "title": "Gezicht in een ornamentale tuin met fontein en poort",
      "hasImage": true,
      "principalOrFirstMaker": "Josua de Grave",
      "longTitle": "Gezicht in een ornamentale tuin met fontein en poort, Josua de Grave, 1702",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ee893488-22d8-4bf9-baa8-43efb2aa4bf3",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1858,
        "height": 1858,
        "url": "https://lh6.ggpht.com/mciZnkgE81b3DiSUvWuVKrtBoKqeAAX0C0Gr2j1DLr9I4ZJVJj2iQ2sxg1BaY6mrXP7A8q2D8Cx1t8qXsjYInZLA9i0"
      },
      "headerImage": {
        "guid": "0eb0b61a-ad55-484c-bfc1-34f76fb22db4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh5.ggpht.com/6094KnXJeAAzODsMMwJvivR9alo-Fi6xIihVE10p7yrgLGy2vbURYjqjWYF7Z47Fy5Azk-Cq2FiNKdjevv9g8xdiiPdY"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1908-4338",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1908-4338"
      },
      "id": "en-RP-P-1908-4338",
      "objectNumber": "RP-P-1908-4338",
      "title": "Rariteitenkabinet",
      "hasImage": true,
      "principalOrFirstMaker": "Christiaan Lodewijk van Kesteren",
      "longTitle": "Rariteitenkabinet, Christiaan Lodewijk van Kesteren, 1868",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "229f2456-44da-4d62-806d-41003dc9ce21",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1596,
        "height": 1596,
        "url": "https://lh4.ggpht.com/Um8tkAVX3f_y0hhnUP2pVUfuw8iQf5PX_KCzWNwghRoWl4N_59DmW3pwMlv4i988uNkiQMAGxtkHm4QdM85YbjuQDRY"
      },
      "headerImage": {
        "guid": "ae79122e-d4a9-4274-8f42-1be5d386a0bd",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/A3iaHLO_IWM7Q3MhBi76opwec3OEuXq_pb_gEdB1b5M8CB9wO4qOs1y-asFpXPXUVw5ww-hH7dmXtfKxiD08ZYNce28"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-35.191",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-35.191"
      },
      "id": "en-RP-P-OB-35.191",
      "objectNumber": "RP-P-OB-35.191",
      "title": "Cartouche met twee vissen, een triton en een sirene",
      "hasImage": true,
      "principalOrFirstMaker": "Stefano della Bella",
      "longTitle": "Cartouche met twee vissen, een triton en een sirene, Stefano della Bella, 1647",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "9c1d3e7e-e059-44c6-b888-b7e91b91fdb7",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/BW127p3G2CiAJLG5s2oIMqjavokPfqC6EQ8xyC7D8HUlgHrL89ckSAX9M3x4PSRULrGd5ayQwzjyQadLFAUmahUlUgs"
      },
      "headerImage": {
        "guid": "ce3cdfe5-9e8f-476b-8dea-ad9790c6ff8e",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 452,
        "height": 452,
        "url": "https://lh3.googleusercontent.com/MzY4OGebwWWfxkJURnca4S_ZBAkdfkHlrRQA_2Hn3NaI894ZYxrNdwLLCCREUtT7rCMpJZv1J4TC1CpLmlIxfhoeLzo"
      },
      "productionPlaces": [
        "France",
        "France",
        "Paris",
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3065",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3065"
      },
      "id": "en-RP-P-1896-A-19368-3065",
      "objectNumber": "RP-P-1896-A-19368-3065",
      "title": "Zeekaart van een deel van de zuidkust van Portugal en Spanje met de Algarve en Andalusië",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Zeekaart van een deel van de zuidkust van Portugal en Spanje met de Algarve en Andalusië, Jan Luyken, 1681 - 1803",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "05d00bd3-e3eb-474a-b2b8-30d068d34bba",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2164,
        "height": 2164,
        "url": "https://lh3.googleusercontent.com/MiCBwLb_IAEseAQJcLg-QOZ4roTX7IFHxgio-hor8lPMeTt4BvJ0RDpO2YPU6JYaeXYViEIL4ySJKQfwjqiEtCyrV98"
      },
      "headerImage": {
        "guid": "6228c2eb-7627-4d16-ac02-d4adc0963f0c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/RGOpivN0_6ID_n77nLZvddPRNwntwwYB9cO3-5DtRZ8mqYNwa61grGY5eECz90LzlR7q9zNL7ePDFm0SgjO_YKqCyw"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3025",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3025"
      },
      "id": "en-RP-P-1896-A-19368-3025",
      "objectNumber": "RP-P-1896-A-19368-3025",
      "title": "Paskaart van deel van de noordoostkust van Engeland en een deel van Schotland",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Paskaart van deel van de noordoostkust van Engeland en een deel van Schotland, Jan Luyken, 1681 - 1799",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "1c2d6580-0c7c-4eb0-bb7b-9ffbf7273695",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2153,
        "height": 2153,
        "url": "https://lh3.googleusercontent.com/m7DcQotd7dp7Y-JifAb7Wj8wVCFIuspEPl9mVxl-pPK2PjLEpSuNh7mUHXo70beHcdqutHTqUUkAUa0lWpPsMkVs2PbS"
      },
      "headerImage": {
        "guid": "ca5a7016-d9b5-4cf8-88aa-8655d0ef63da",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/csobw_k7sgRepuwCHNNuEVfTojnpEfRC3LiBl1tPirw4CP7H7WjptDxB-mJ2uGKO024Xd1KmrAE-ddGy0RRSJkpjNKw"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1909-4211",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1909-4211"
      },
      "id": "en-RP-P-1909-4211",
      "objectNumber": "RP-P-1909-4211",
      "title": "Arabesken met vazen en meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Laurent Guyot",
      "longTitle": "Arabesken met vazen en meerminnen, Laurent Guyot, 1788",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0f150b51-171a-4941-860e-dce3c0d95678",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/x_x9NOldc6saO_g47EO7mxd6o_RUmtdDcvg0oetizRVlMCwz4Tq1eMw1fVdTaIZA5YmjkwM8yLd2bexAZDKE7Q9NfYo"
      },
      "headerImage": {
        "guid": "ac635aa2-f4ae-46b6-9da3-d7cdb213f7bc",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 440,
        "height": 440,
        "url": "https://lh3.googleusercontent.com/xYEfOKUJVQYMrjPLYuXky3YuQbuRS7LsV_St6-y1fXJHojuDLT9cR-R2U5Rmft9YJWHkZ_EeMMfnAs--Ue_BqmwJ8Q"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-3962",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-3962"
      },
      "id": "en-RP-P-1964-3962",
      "objectNumber": "RP-P-1964-3962",
      "title": "Paneel met meerminnen en fronton",
      "hasImage": true,
      "principalOrFirstMaker": "Jean Pelletier",
      "longTitle": "Paneel met meerminnen en fronton, Jean Pelletier, 1772 - 1779",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "c5ef9ce3-d923-4c53-b3e4-f3a96663edb5",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/CZcQK2KoLeJeKx1TtEzvGkiD0vVF4pmgbFXn1TfoT3UZlYH7zK1p6ByARHEskxVY7_ZARrW5fVjTXfh0XWfI1pqjIKk"
      },
      "headerImage": {
        "guid": "859ab809-cb72-48df-8887-95c4e58149bd",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 370,
        "height": 370,
        "url": "https://lh3.googleusercontent.com/vBXT1_nnWJ_FuPx9wpSu1U2ygyDgUa8H_8VKs4t8gMm7Cqtp0k_Lw_0iNfr1Dv9hhd4rw-0gdASzR0gaFaFsi3_41su9"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-3689",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-3689"
      },
      "id": "en-RP-P-1964-3689",
      "objectNumber": "RP-P-1964-3689",
      "title": "Poort met gekroond wapenschild",
      "hasImage": true,
      "principalOrFirstMaker": "Pierre Gabriel Berthault",
      "longTitle": "Poort met gekroond wapenschild, Pierre Gabriel Berthault, 1752 - 1794",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "a21a6dc2-b488-4907-9d8b-afdb15b7142c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/2vMUeNtXfRZBAlwrsCoFL4LEcv2TlUNhuZEkyPxY_c-cL_PloepI2BkcFWYDiE9XtzuxQJ5oFuIs-lgLtEuInnilJbAs"
      },
      "headerImage": {
        "guid": "0e54d9c6-c269-477f-841b-d19cc9d44862",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 374,
        "height": 374,
        "url": "https://lh3.googleusercontent.com/AmUKCqDF3tr_XCwCeF_Cg-vGy90qI5Tw_PEhenU2-dMExvLpwgI5Mms4J9Wy_lymQbpi0EBkzhRw-L9A0QvwvXyP0HA"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-3735",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-3735"
      },
      "id": "en-RP-P-1964-3735",
      "objectNumber": "RP-P-1964-3735",
      "title": "Vazen en meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Juste Nathan François Boucher",
      "longTitle": "Vazen en meerminnen, Juste Nathan François Boucher, 1752 - 1782",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "3d13d12f-0454-4d8c-872e-a100fb901eb8",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/KEvWpUklRQGl4N6iAs4GXt4jcybqp6p9VUc3pEUlF0HEilQgyKAdvh6ZqQZxVZz-K7Sokhy00HEgD4NLHbo3U0oM_w"
      },
      "headerImage": {
        "guid": "ff2a2ce7-683b-4e62-998d-dbedfb885a16",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 280,
        "height": 280,
        "url": "https://lh3.googleusercontent.com/WEIUhOklpVfrE1APAl1_h5hOYvQk9OjqTuSpVZauwz3bOnz6y3lqefief5Q6R6SNNk8wj-iVNLg8moB8mnwVFd7FIBgD"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3013",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3013"
      },
      "id": "en-RP-P-1896-A-19368-3013",
      "objectNumber": "RP-P-1896-A-19368-3013",
      "title": "Paskaart van een groot deel de Waddeneilanden",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Paskaart van een groot deel de Waddeneilanden, Jan Luyken, 1681 - 1799",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ce134b99-8268-414e-a128-380a4d67c01f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2151,
        "height": 2151,
        "url": "https://lh3.googleusercontent.com/vC047BPEAI7tGOqZoRv-OLZhx5y2uvTPNG9yUwHczkIXpjGUrXanzSZLWfNWMzaaDyvDzfgLNL9O29887zJ0km9n3SM"
      },
      "headerImage": {
        "guid": "f5f36e41-39f3-489b-ae93-f6a937b034d8",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/VSiyALQwHxLwh5583LtTIaOtx5INHkhoDOSxcEveR23_OdaU7Q6r_Pu6ooY3GZTzZ2wT_5KgNstmwo4qxboBg109lw"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-2004-330-39",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-2004-330-39"
      },
      "id": "en-RP-P-2004-330-39",
      "objectNumber": "RP-P-2004-330-39",
      "title": "Schildpad, krab, zeemeermin en zeemeerman",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Schildpad, krab, zeemeermin en zeemeerman, anonymous, 1635 - 1660",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "00b21dfb-3e75-4897-9665-1fa4c19e601c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/cjKZLVtbV8mRsLKoTOietcb1gdlwmTCgzDf_Zcts0HhiU6Y-q1eiD3l-je7eg75wk_tAXKbj4rrzsFgH6PbJhkItXf7U"
      },
      "headerImage": {
        "guid": "e2be0e4e-d3ef-4986-a887-6453da5e71a4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 417,
        "height": 417,
        "url": "https://lh3.googleusercontent.com/iwgVPKZMeto6CIQD0gpGLllo41cGIiGMGxmx4FzxRAvr1skV1Q9Py9o2kurhHVVQ7m8ul5S94wkjjKpsijzwxxlpeA"
      },
      "productionPlaces": [
        "Utrecht"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-T-1969-738-6(V)",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-T-1969-738-6(V)"
      },
      "id": "en-RP-T-1969-738-6(V)",
      "objectNumber": "RP-T-1969-738-6(V)",
      "title": "Figuren in een roeiboot, een vis en een zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "Carel Adolph Lion Cachet",
      "longTitle": "Figuren in een roeiboot, een vis en een zeemeermin, Carel Adolph Lion Cachet, c. 1905 - c. 1910",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "60752d82-bb2b-40c4-aa8a-a219c6a7264f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1842,
        "height": 1842,
        "url": "https://lh3.googleusercontent.com/xMDx3Aj4APO2q6cDz_VLXz4CSJrHrIAFVgl30NV_XPY1P8PrVs166tQ7rw-0SDRL6LUMfCNuKENB5Po84KMd5YmXfHnq"
      },
      "headerImage": {
        "guid": "8fec6f81-da17-41b7-984b-fddeb9e84c6e",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/aC0SwTejI2TZ2umn_RUe1SS4ISZgaZ0zrmUE5_G6U5jqHbD6ppmiQxPQ4k-45gAYZyuK3BVYfdPvuomc183Fu_5u2LY1"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1917-24H",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1917-24H"
      },
      "id": "en-RP-P-1917-24H",
      "objectNumber": "RP-P-1917-24H",
      "title": "Vaas met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Juste Nathan François Boucher",
      "longTitle": "Vaas met meerminnen, Juste Nathan François Boucher, 1755 - 1782",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0d601314-b7a1-455c-bfb2-b41fabe70171",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/pTcjx58rgiD1yGKTY44A8YNJAhibK9LsRdPg-GNsOjnYkUjgJXOCyBrO6UUgaoP-CQ87eHlixcbfBWggCFaHtIn6ej8"
      },
      "headerImage": {
        "guid": "17921609-a23d-406a-8052-ec4ec58ddead",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 447,
        "height": 447,
        "url": "https://lh3.googleusercontent.com/FGNlzL1E9ZmFl-Lj0PpRawZ0My5-cHMI5bPAq4vK0PLv158g7KIPkXfzRDGl8zYcarGq5c96nAAfeiNsO5Zo6vJ3uw"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-8901",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-8901"
      },
      "id": "en-RP-P-OB-8901",
      "objectNumber": "RP-P-OB-8901",
      "title": "Vaas met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Gabriel Huquier",
      "longTitle": "Vaas met meerminnen, Gabriel Huquier, 1729 - 1737",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "969d9ca3-8c98-4399-99f7-d7c20046231e",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/OT_JEzUkmG66Uo_pZgLLtnBdn397YTi_p9lFInJFCTiRuNSqi850EaemF3lXKcWm8ASjosXh0K66McoqNk3KD2fsxIk"
      },
      "headerImage": {
        "guid": "8f959d8a-e24f-48d4-800a-eebdb5e4b9e2",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 417,
        "height": 417,
        "url": "https://lh3.googleusercontent.com/9OPMQ-l6kbJBCp52FXq4JPefNAhUheSAev6UuwgGSqet1lnmClyxf39S4lWVAesmNpplM-ybYpZp70zvZin_0p3zZf0"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-8880",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-8880"
      },
      "id": "en-RP-P-OB-8880",
      "objectNumber": "RP-P-OB-8880",
      "title": "Vaas met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Gabriel Huquier",
      "longTitle": "Vaas met meerminnen, Gabriel Huquier, 1729 - 1737",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "63e1ef42-c333-4e39-864d-747fe85bd81e",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/eUKfpneRR6Qxz2VkvxJA-7i9STziEne4JA_XT_8xqU_YSZOUFoydWSvJud-_dkwgVnLGEGMaqmpFYvTBZoLIFFVliQ"
      },
      "headerImage": {
        "guid": "f594f401-f179-4bbf-b1f2-f5c380183d65",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 418,
        "height": 418,
        "url": "https://lh3.googleusercontent.com/X32KHPV758vMKKjTUNyCocr-gFT7Nr1CPujkJnIidEt21v5G4tjdhoycFhISzeUAnjpDpsUfAF9wejnz21q88miSoVY"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-9091",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-9091"
      },
      "id": "en-RP-P-OB-9091",
      "objectNumber": "RP-P-OB-9091",
      "title": "Wijnkoelers met dolfijnen en meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Claude Dominique Vinsac",
      "longTitle": "Wijnkoelers met dolfijnen en meerminnen, Claude Dominique Vinsac, 1759 - 1800",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ad697b39-8ebf-4f8e-b20b-8589719aa106",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1639,
        "height": 1639,
        "url": "https://lh3.googleusercontent.com/PAnoywi_CBWuegfXHIy_jJrwQyt16hZrD4czorDsbhuVvWe98xDcpR_Qb4u_4FjvlFT-K5nCf3EqQxxbHJ0xS5PCwA"
      },
      "headerImage": {
        "guid": "235b6f24-6161-49b7-92d4-c70fbdcfaad3",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/oDWJ5cLVDVAYpUmm4vUd-OyprsHZNY898wL4uLzPN1KisJuYK3Z4Eb-DCDHSV_Xj1Mq9Bz6hkgHUwotIlKoU4dSSIhE"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1886-A-10944",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1886-A-10944"
      },
      "id": "en-RP-P-1886-A-10944",
      "objectNumber": "RP-P-1886-A-10944",
      "title": "Wapenschild bekroond met een zeemeermin",
      "hasImage": true,
      "principalOrFirstMaker": "Michiel le Blon",
      "longTitle": "Wapenschild bekroond met een zeemeermin, Michiel le Blon (attributed to), c. 1600 - c. 1699",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ef1350eb-963d-478d-9422-12b9c9c364a7",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1998,
        "height": 1998,
        "url": "https://lh5.ggpht.com/IBK1swT6oxPGV9MrvCbol5HbfoDYGGsQMDOXwlV5-x7LgtC06C3v6qn-GwWmGlxqUGXbCpTOvU93-aSMV7gogWDeqdQ"
      },
      "headerImage": {
        "guid": "ea8dfb3d-5d59-4c1b-96de-18e49353a2fe",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 461,
        "height": 461,
        "url": "https://lh3.ggpht.com/ejGU729fmIFQi2iwSbPhr7K0jY3ri5qAmKcV1l7sAtQM7fOS_OeH_WKuOL2XLR5QB57ikzAqvopS29pPBiNHjyhZZoc"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/BK-1960-17",
        "web": "https://www.rijksmuseum.nl/en/collection/BK-1960-17"
      },
      "id": "en-BK-1960-17",
      "objectNumber": "BK-1960-17",
      "title": "Nautilus cup",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Nautilus cup, anonymous, c. 1630 - c. 1660",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "8a705e35-4279-4c81-9ad4-7b2be0442d5d",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh6.ggpht.com/NWmOJPI0iyLRgfbOIEaSuf2eAZT96UxFVr68CHlST47glDAKn4vFt_8PQuKH4BV6_NuFVrDfidLzXRM33S8186e3bGs"
      },
      "headerImage": {
        "guid": "f3463b65-2621-47bc-ba63-5e5abfaaa666",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh5.ggpht.com/hxKu9uJwHErpU9E2aDzqy3EsNifxjE5iiZMh_dnAZ3Z3OVxm0_0aReCLbD9P6KB04iSNJ1SnY2wFJniVps8UkKRcxw"
      },
      "productionPlaces": [
        "? Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-2007-419",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-2007-419"
      },
      "id": "en-RP-P-2007-419",
      "objectNumber": "RP-P-2007-419",
      "title": "Antieke vaas met Minerva",
      "hasImage": true,
      "principalOrFirstMaker": "Patrick Begbie",
      "longTitle": "Antieke vaas met Minerva, Patrick Begbie, 1779",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "a6bebdd1-ebcc-4396-8220-601fbd4aaccf",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/oFktC-649chj32BgeJfJ8NylI8wZnPWE2MbGYaFwiLWlMjmkEGwQDpOf480C_8i56pIsYZB1jGhOB8P6S2HbgnuDAfmN"
      },
      "headerImage": {
        "guid": "68a471f7-4543-49b1-8f82-c7103ccba07b",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 416,
        "height": 416,
        "url": "https://lh3.googleusercontent.com/lCKmnxFNO-3ZyOf9wjwN5gGn_dv7VmK-wsam-tGHFq_OQTneetys1CODfExI6Tgiw4q70ywRtOU7-9OK0yXaJVHb_g"
      },
      "productionPlaces": [
        "London"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1981-212",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1981-212"
      },
      "id": "en-RP-P-1981-212",
      "objectNumber": "RP-P-1981-212",
      "title": "Amphitrite op een vis",
      "hasImage": true,
      "principalOrFirstMaker": "Adriaen Collaert",
      "longTitle": "Amphitrite op een vis, Adriaen Collaert, 1570 - 1618",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "b1074e6a-fb23-45bb-bac0-e33598399f00",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1744,
        "height": 1744,
        "url": "https://lh6.ggpht.com/nJrCrxLZQ8H2mPtfH0LLudFbmS3OsNP-AUTFlNqJNne6elYWgnQ7lCqgUpGLUJwhnhrTMLJ0V8PMGVCkPMSUpk8XqB4"
      },
      "headerImage": {
        "guid": "cea5582b-bb3b-4b1a-bfb1-16b97cd06389",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/emQpIxQkFB9LL56jgDu7xL9T1USKDJfuR2-FZ8TdaH_P_bDKVGz1t6FO-gjQG35NAAiJHYhriCvvAKx35Pf9FvqSupQ"
      },
      "productionPlaces": [
        "Antwerp",
        "Antwerp",
        "Antwerp"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-BI-2838A",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-BI-2838A"
      },
      "id": "en-RP-P-BI-2838A",
      "objectNumber": "RP-P-BI-2838A",
      "title": "Fries met de triomf van Neptunus (linker deel)",
      "hasImage": true,
      "principalOrFirstMaker": "Cornelis Bos",
      "longTitle": "Fries met de triomf van Neptunus (linker deel), Cornelis Bos, 1548",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "bc11581e-ad9b-4cfb-8aeb-7b937e25f65f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1309,
        "height": 1309,
        "url": "https://lh6.ggpht.com/nmsZYjF0uYxUCr41fB30P_CbkGsoTX7HNlgoEKjosBxaR_rAzfwiqBoWxYOhZMwtvx0j7Gg2gVQhrwmAkgeaJrJnsg"
      },
      "headerImage": {
        "guid": "56ccafd4-304b-4489-a4b4-ef982ddc03fe",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh4.ggpht.com/WCdZ6vsH65897goR7iy1wryEo6zUKTpRbMh5PoWwsProeMyrlCLC7oTPoffMuMXCuuGc4qM6gmFFy--5OAwXk5OJJF5C"
      },
      "productionPlaces": [
        "unknown"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1981-213",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1981-213"
      },
      "id": "en-RP-P-1981-213",
      "objectNumber": "RP-P-1981-213",
      "title": "Acis op een vis",
      "hasImage": true,
      "principalOrFirstMaker": "Adriaen Collaert",
      "longTitle": "Acis op een vis, Adriaen Collaert, 1570 - 1618",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "09da0891-8573-45a0-bc9f-60209c016fcf",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1741,
        "height": 1741,
        "url": "https://lh4.ggpht.com/PRxmJ_BZrNxbs-TgwIC_8ScK_9ZLAbgLAA2TmvQUhpRTQjHSC1tKIlFH4QnfN-ujCjRoFagNWlxDXPMKIWBb0PROdgg"
      },
      "headerImage": {
        "guid": "bd3461c5-e3d7-4bd6-ba07-46698825e6e4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh6.ggpht.com/it0_SQFS_kiMvzr4mKPpfa4qf9j08IzIQqfCRxVSHkkTA-eK-JTKLv3olAYx7A_eeSigPMw6e-xZA75I2CXa-rAs1S0"
      },
      "productionPlaces": [
        "Antwerp",
        "Antwerp",
        "Antwerp"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-61.512",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-61.512"
      },
      "id": "en-RP-P-OB-61.512",
      "objectNumber": "RP-P-OB-61.512",
      "title": "Vignet met het wapen van familie Alewijn",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Wandelaar",
      "longTitle": "Vignet met het wapen van familie Alewijn, Jan Wandelaar, 1710 - 1759",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "294ecc30-da8d-443c-9d5e-5a66b5617c94",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1947,
        "height": 1947,
        "url": "https://lh3.googleusercontent.com/qNJ5BqQ1LRN_55UJisxJqCwhkT35g40YgM_yCE2jR0hM_GsDyV32ikBw9JF9-srpkwap-eKsajq3yNQmy2imlrMZ4IYD"
      },
      "headerImage": {
        "guid": "c11d4bf1-9951-475b-b451-063b82ffb806",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/E9rQTl77EbWSxCkokW21bOXZr2F0cWy3jJQMzYPgFhTFHXRft_fvaIVScFl6wkTS2NXC_oUkS5vytDprKfWVQJteDzM"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3060",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3060"
      },
      "id": "en-RP-P-1896-A-19368-3060",
      "objectNumber": "RP-P-1896-A-19368-3060",
      "title": "Zeekaart van een deel de Golf van Biskaje bij Bilbao",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Zeekaart van een deel de Golf van Biskaje bij Bilbao, Jan Luyken (rejected attribution), 1734 - 1803",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "76de9094-2572-4189-8ead-9d4335696c7e",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2175,
        "height": 2175,
        "url": "https://lh3.googleusercontent.com/KNOmeEnmSlfi3tfprvco3CIM8VLvJuIJqJUYMjKkRYUzByA4H5n4JQcHGUtDTvWWlWwqgCiyIQmEjmkiOyfWykan"
      },
      "headerImage": {
        "guid": "4d3ccb4c-5ef2-4408-92b9-92492024a3de",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/kfbH4JJEsIApdFyqFW25yi-ePkoyPxwYowDNBavcEFDc1KMJrkINoNDtGfQHeyPFIDRTvpOmNrgKN1TRDGcn2-B9FbHM"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3027",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3027"
      },
      "id": "en-RP-P-1896-A-19368-3027",
      "objectNumber": "RP-P-1896-A-19368-3027",
      "title": "Paskaart van een deel van de Atlantische Oceaan met de Orkney Eilanden",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Paskaart van een deel van de Atlantische Oceaan met de Orkney Eilanden, Jan Luyken, 1681 - 1799",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "498548fc-0b59-4b66-b6d4-951e0f1a7c00",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2198,
        "height": 2198,
        "url": "https://lh3.googleusercontent.com/tfZXrsGBESj1qAl8KArg1kqtAK9ZPWHcen3Xf75o9BP4m6p6PGtJhICwTD-0X1EvW4FSkn0wmmNSkoA1X3UbIG1q-Q"
      },
      "headerImage": {
        "guid": "d77e7d3c-f50a-4e12-a189-063628949033",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/9CMzU6fVN2aWw32ag5gZWXRRFY2Qotw3k9vdQpsgXtD62ffG36_beIzu0y0JQxmTv0nngLgfQIAYwHrb9y7MIoj4LoU"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-204.873",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-204.873"
      },
      "id": "en-RP-P-OB-204.873",
      "objectNumber": "RP-P-OB-204.873",
      "title": "[Wat voor monsters / wat voor dieren/) Geefd on niet de zee al uyt [(...)]",
      "hasImage": true,
      "principalOrFirstMaker": "Jacobus Conynenberg",
      "longTitle": "[Wat voor monsters / wat voor dieren/) Geefd on niet de zee al uyt [(...)], Jacobus Conynenberg, 1711 - 1723",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "c302ddcf-ad6b-4b8e-94a3-2665919b1e17",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/08FSvVcmLLEiiQOeTFTbyLHTIHAGFm1u6YH4CvEmRZD8GsyuR8Qotl9IUUVqkplxbsdikk4g4_ZapCVJNQDrmvwSgA"
      },
      "headerImage": {
        "guid": "9ce800af-0552-40b1-bf9a-3b8f712576f3",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/AGWgK9e_EMmO4E93idac0zg7TDeLpttEhKIZ3k-SwQY6On3SJ6EkfH3ph2yU3-lc0dlhAci38XtkWA2t3GYNscC0hjY"
      },
      "productionPlaces": [
        "Amsterdam",
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-36.310",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-36.310"
      },
      "id": "en-RP-P-OB-36.310",
      "objectNumber": "RP-P-OB-36.310",
      "title": "Aankomst van de Hesperiden te Napels",
      "hasImage": true,
      "principalOrFirstMaker": "Johann Friedrich Greuter",
      "longTitle": "Aankomst van de Hesperiden te Napels, Johann Friedrich Greuter, 1646",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "252ea3e7-96d2-4fa2-90d2-f50b1e8c7810",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/jRIR2yK_6VKSJNtwC8S0h0fLsyb5EIO1Wg1p3R2jtnFIYDURi7TAcTzvvJ5OvL5F_Nqy0k8kCbIKNh4rvzoa4UhsPnAr"
      },
      "headerImage": {
        "guid": "58ea043e-1b6d-4fda-80a9-b268fefde95f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 409,
        "height": 409,
        "url": "https://lh3.googleusercontent.com/GwizwuldS3wSol23bk453VEwfn7QTTeI3v9FmqtxgpDrOZIcKJTWWH5smDDcNCAAHfj7k-zxv93wEquxIbXDJ1P_cA"
      },
      "productionPlaces": [
        "Italy",
        "Italy"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3033",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3033"
      },
      "id": "en-RP-P-1896-A-19368-3033",
      "objectNumber": "RP-P-1896-A-19368-3033",
      "title": "Paskaart van de monding van de Finse Golf in de Oostzee",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Paskaart van de monding van de Finse Golf in de Oostzee, Jan Luyken, 1681 - 1799",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "3db9b9f4-f1f7-4922-8761-7763935e0e81",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2179,
        "height": 2179,
        "url": "https://lh3.googleusercontent.com/Sdxg1mtdciZ44SpZGJAMz23CAhf24znGT7jdEb6hSiPUxDwPsrChc92tqewDfaqbcjPBvS99C5_Y_ZlPvUbKnmKs_bU"
      },
      "headerImage": {
        "guid": "69d21f2c-46fd-4d7d-a279-1d7ece37508e",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/VEo1tDe76WSat47eSd5FwH-Om0B_GrmdhByZBYfXosmFblXCAK1VN3ZqUwfYa_ZeHu3tZHsDGMTcjzvymIgnvqacD-sv"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-35.211",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-35.211"
      },
      "id": "en-RP-P-OB-35.211",
      "objectNumber": "RP-P-OB-35.211",
      "title": "Cartouche met schelp, kroon en tritons met sirenes op de schouders",
      "hasImage": true,
      "principalOrFirstMaker": "Stefano della Bella",
      "longTitle": "Cartouche met schelp, kroon en tritons met sirenes op de schouders, Stefano della Bella, 1646",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "3d2fc013-3a64-46ef-af0e-02de6757618f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/k44K1i8hCsyYHO_8odcKdHn2arhvtlhsOL88q1HnRbjfidWxNTx1mM2oMxjqQoGPZ2T3wBAfH7z73VvloWKah-_lsyE"
      },
      "headerImage": {
        "guid": "f4430982-fb6e-4517-9d72-8ed4e985fcdb",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/dNJ8nKN7h2OjirLWx_L4M_939DvqUk5th5TM1lrJ4LpTr0Q-_cqEVQK035eRLUQfX6T145IpSNFqq7IJ1PsFYggGow"
      },
      "productionPlaces": [
        "France",
        "France",
        "Paris",
        "France"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-2520",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-2520"
      },
      "id": "en-RP-P-1964-2520",
      "objectNumber": "RP-P-1964-2520",
      "title": "Omlijsting met masker en meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Carl Albert von Lespilliez",
      "longTitle": "Omlijsting met masker en meerminnen, Carl Albert von Lespilliez, 1738",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0fa7b0f3-fc35-42c8-a582-2e0b963bc851",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/RwVxHzbDTRExfLJ3Rr6EjM2RpWY84BzCoeRa7XOnuhvPKYJAS1Y8wNIsdopJAFqPvPdiloBkU_a-6GmQrjLrHbBlSAI"
      },
      "headerImage": {
        "guid": "b6c34bd4-4f53-4a4d-9458-517b6c1fdc62",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 403,
        "height": 403,
        "url": "https://lh3.googleusercontent.com/miE90CRMjWEABtyJbCJqPH7i-XWPw9aKxRNV7ikz5_IsD1Ea3xXlS_BatiNGSrheJ6Scud3W-Wad0btHts3-hGCSnMY"
      },
      "productionPlaces": [
        "Germany"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-3727",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-3727"
      },
      "id": "en-RP-P-1964-3727",
      "objectNumber": "RP-P-1964-3727",
      "title": "Rookvat met meerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "unknown",
      "longTitle": "Rookvat met meerminnen, unknown, 1752 - 1782",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0b5d6657-6e68-448e-afbf-92d51323846d",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/mnwNdBNwCGAywWg5QsFVB3E5W4ah9SfFn4MBcaEH4BmkWbMKvIA_i2kPRHFUIdF7wMonxFpj_E2-7htRi4z2AGdbVoVF"
      },
      "headerImage": {
        "guid": "5f8343ec-c3e6-42bf-a69d-7e9f9c2b91ee",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 288,
        "height": 288,
        "url": "https://lh3.googleusercontent.com/KKidn05AS0UsrEn6Q2JTidgozZp8YCkJD2nIsODWJFPWv47_OCJQHr3ZgL7t7w39uCXPjSKgjRGSW_rDFUenTebMjjw"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1964-4346",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1964-4346"
      },
      "id": "en-RP-P-1964-4346",
      "objectNumber": "RP-P-1964-4346",
      "title": "Medaillons en cartouches",
      "hasImage": true,
      "principalOrFirstMaker": "Nicolas Guérard",
      "longTitle": "Medaillons en cartouches, Nicolas Guérard, 1658 - 1719",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "5d7a8448-0106-4a2e-9973-33bc4749a7ec",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/0lnMj5wfGPPQaYendxBMSRwsn6OZuA9xqqVahPIjiCJejiLyW-Vo7pTIc2QDEhDij2bzsSZSR1_yTLWKbR5-yEsRUUQ"
      },
      "headerImage": {
        "guid": "1245ca78-5bee-4306-8f0d-60640c1e7d9b",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 413,
        "height": 413,
        "url": "https://lh3.googleusercontent.com/biBmZ0U2rOe7kgpFQIpynRv8nbm3Et_8WjuFlP4CK9141_TNLPFkYKHVNMcGo0KwAU2jkMREjKHlX7rXjr4j_wUqU-I"
      },
      "productionPlaces": [
        "Paris"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/BI-1898-A-1742-11",
        "web": "https://www.rijksmuseum.nl/en/collection/BI-1898-A-1742-11"
      },
      "id": "en-BI-1898-A-1742-11",
      "objectNumber": "BI-1898-A-1742-11",
      "title": "Ark van Noach",
      "hasImage": true,
      "principalOrFirstMaker": "anonymous",
      "longTitle": "Ark van Noach, anonymous, c. 1530",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "54e1c441-d322-48ff-aad5-61bbee975266",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/-_0yKfzMf8HZposEkPTjUHEY58N4WepCcAls8v2KoWH3tAxgAPexyiG4H0NgPvFonAu7ify2Zle2IQPVbiZDRFjuA5k"
      },
      "headerImage": {
        "guid": "08f8a777-7fb8-455e-acaf-0ca43b9ccc7a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/TlIkU9LyUmWlRceKFDzgK71QiblwaSK-2t4wnA0sslvy4BFOQCGjbPWdVc02HfoZoxTJ4-tU_6hcQRGFt3pzwGNYde6u"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/BK-AM-16-C",
        "web": "https://www.rijksmuseum.nl/en/collection/BK-AM-16-C"
      },
      "id": "en-BK-AM-16-C",
      "objectNumber": "BK-AM-16-C",
      "title": "Two glass holders",
      "hasImage": true,
      "principalOrFirstMaker": "Leendert Claesz",
      "longTitle": "Two glass holders, Leendert Claesz (attributed to), 1609",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "0e5414b8-eed1-4f7c-9233-8780d30b3cb6",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.ggpht.com/8Tr5uqQv9gO4kq9UK1ojwVMlAQQQGeQYwldciwE_J6ur01komd5S92VY355vqddOv_krlsFmGETTTYQmQZz4Vzha5A"
      },
      "headerImage": {
        "guid": "3c667e6e-4c85-4e0b-89e7-f45641eb28f9",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/rvZYiWzR1pSa0kAqP15qB2WjwMRdfaX5m-eaRl1MJ4ogyFjkmaTrKFh75n43VXMeZ6TlbD8RQ9tdAK-8BGbU0jBavA"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/BK-AM-16-B",
        "web": "https://www.rijksmuseum.nl/en/collection/BK-AM-16-B"
      },
      "id": "en-BK-AM-16-B",
      "objectNumber": "BK-AM-16-B",
      "title": "Two glass holders",
      "hasImage": true,
      "principalOrFirstMaker": "Leendert Claesz",
      "longTitle": "Two glass holders, Leendert Claesz (attributed to), 1609",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "9d00867d-1cac-4cf6-b2f4-196de4101757",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh6.ggpht.com/J8YVOTagHITT285yU6npXUJ_nuZ7RUGTycXP7RO92FOdaZGWRmnEh3Y7vF4BZz8_00neeB6ea7oiXmpv7wZwNMgvTrU"
      },
      "headerImage": {
        "guid": "8e34bd74-61d0-436e-9d4c-a50e77dc53e5",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh6.ggpht.com/_t_zzRghN3f8gzYxSPTri0oZ3oPQ_JfQq0_HUvM0hKsvHy6QXpf6RS03oUCrlJYMSQcYM8WhIvBlFREmJkaoJrSbU68"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1911-3358",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1911-3358"
      },
      "id": "en-RP-P-1911-3358",
      "objectNumber": "RP-P-1911-3358",
      "title": "Reliëf met personificatie van het element Water boven boog aan westzijde van de Burgerzaal in het Stadhuis op de Dam",
      "hasImage": true,
      "principalOrFirstMaker": "Hubert Quellinus",
      "longTitle": "Reliëf met personificatie van het element Water boven boog aan westzijde van de Burgerzaal in het Stadhuis op de Dam, Hubert Quellinus, 1663 - 1668",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "de4a14ed-db5c-454b-b60f-7266a52547fe",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 5357,
        "height": 5357,
        "url": "https://lh6.ggpht.com/IKfw3hA2UTUmKmLG_Xs9qGL2FxBBVqqqClkr_WeKhE22gcs80fDQew9bAM4uxW50Fne-FMPmp7pVFyimsVYeEeWSpA"
      },
      "headerImage": {
        "guid": "a1236d39-8f0e-4c48-97a5-d279f1210547",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/NAyo9DV78hrVut-G3Uy4tXuZZ_h-ijD0M9-O26pdKyhwAr9x8E1o9hBH797_hh7NURa-FS0iqELK_DsrQAHjsmB8Irg"
      },
      "productionPlaces": [
        "Amsterdam",
        "Amsterdam",
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1911-3357",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1911-3357"
      },
      "id": "en-RP-P-1911-3357",
      "objectNumber": "RP-P-1911-3357",
      "title": "Reliëf met personificatie van het element Water boven boog aan westzijde van de Burgerzaal in het Stadhuis op de Dam",
      "hasImage": true,
      "principalOrFirstMaker": "Hubert Quellinus",
      "longTitle": "Reliëf met personificatie van het element Water boven boog aan westzijde van de Burgerzaal in het Stadhuis op de Dam, Hubert Quellinus, 1719 - 1783",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "069fd506-2201-4a8a-8220-0b300b974cf8",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 5357,
        "height": 5357,
        "url": "https://lh4.ggpht.com/tq2GzP5T6zULM0BaYKp9G9jL3tJfl1h0tJyLkEAWd0OFcphyCSVuw-GOvKTDmjl6Bv4D805icmfr7ZGEUgS2lXdoEQ"
      },
      "headerImage": {
        "guid": "f1e97025-1822-4f3f-8f3f-36cec86b7cca",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh4.ggpht.com/plVK2vwSg22SBo42xq_fe674R45l83R5afmEpQqkEI7wcxQBcfPoGPGRS_4e7TH9ijz9RMZeVKqjd_2yaRsKkV5gNbMs"
      },
      "productionPlaces": [
        "Amsterdam",
        "Amsterdam",
        "Amsterdam",
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3072",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3072"
      },
      "id": "en-RP-P-1896-A-19368-3072",
      "objectNumber": "RP-P-1896-A-19368-3072",
      "title": "Kaart van een deel van de Middellandse Zeekust van Frankrijk en de noordkust van Italië",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Kaart van een deel van de Middellandse Zeekust van Frankrijk en de noordkust van Italië, Jan Luyken (rejected attribution), 1682 - 1803",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "68c9e6aa-03d0-4666-97d2-afa4281f5682",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2144,
        "height": 2144,
        "url": "https://lh3.googleusercontent.com/X9jG5RLT4S5TzBkwDiYhFSPJ83a72pUB-mM_eSZecmf7-MjpZUe9wms_4jaUizZd9pQDTBNIqeoXU0kqTT6rqecMcz1e"
      },
      "headerImage": {
        "guid": "db884d50-65c1-42b3-a709-385393a35f76",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/NMMqh-X-Ay_u8lrEf8zyGdQWjqMYeoaf8kwaNLYyhX5Fkewl6NIb-IlEbDcbtEX6cqZsCHFpVqpatc3X7CJ6BeDGJg"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-2000-284",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-2000-284"
      },
      "id": "en-RP-P-2000-284",
      "objectNumber": "RP-P-2000-284",
      "title": "Emblemata met een schelp, meermin, anker en kruis",
      "hasImage": true,
      "principalOrFirstMaker": "Anthonie de Winter",
      "longTitle": "Emblemata met een schelp, meermin, anker en kruis, Anthonie de Winter, 1697 - 1718",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "7fdb6631-c184-43e8-b711-e78427748491",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/2jGqhWpt1Jh4hOy4P7UPo9UqptYVa-bf3_BxP-QV-oDKFOKXf_yVd4_OLZPR0KFHpfpwciRl_C6x6nlnbsKBzE_gZC4"
      },
      "headerImage": {
        "guid": "782a20ee-cef9-4cd4-832e-e965fc289e2a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 443,
        "height": 443,
        "url": "https://lh3.googleusercontent.com/gJ6Ij7fMh94-_ViwUCu9bmXcGQVXYqtpKnT7CqbqQdJbfucLwlwkaOnEfCn_xZbaAnOdzWH2hSD51qGQSnjRpGZMtsJq"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-205.349",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-205.349"
      },
      "id": "en-RP-P-OB-205.349",
      "objectNumber": "RP-P-OB-205.349",
      "title": "Waterzoogdieren",
      "hasImage": true,
      "principalOrFirstMaker": "Dirk Noothoven van Goor",
      "longTitle": "Waterzoogdieren, Dirk Noothoven van Goor, 1850 - 1881",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "5701386e-241e-49ba-b946-13165629d23a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/VzjD329pmEtRYFRPjPssmK2sUYESnjXw45X5nPFe-2SQdBOR2CaerA0lvNXY_wJOMoikzbh9Gmmz6BgA0Xp-kR97yvk"
      },
      "headerImage": {
        "guid": "0c66836c-26c0-403d-a36d-0bc5413b9f4a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 436,
        "height": 436,
        "url": "https://lh3.googleusercontent.com/og_WzK4MFQJW4_Pa-v6BmGNDUFAtJr6XStQ1Ht64CEQpuEMBM0iry2IVXMuuLmLrAy6Er2gQBUvWZbC3Fs9PP1v4-w"
      },
      "productionPlaces": [
        "Leiden",
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-205.350",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-205.350"
      },
      "id": "en-RP-P-OB-205.350",
      "objectNumber": "RP-P-OB-205.350",
      "title": "Waterzoogdieren",
      "hasImage": true,
      "principalOrFirstMaker": "Dirk Noothoven van Goor",
      "longTitle": "Waterzoogdieren, Dirk Noothoven van Goor, 1850 - 1881",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "2dbab407-9868-4b15-9a8e-6c3a020fe0e3",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.googleusercontent.com/lMhtRWiHNpV-ihI8lrNwN_xKu0F4nOgib2-kSi7JPo01li0ZnLurKbS2a49CK8J7kht53e6khdy87d1pQ7fYtTjrtpux"
      },
      "headerImage": {
        "guid": "b6e74a60-64ec-4d11-8373-e6f5d7600b73",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 426,
        "height": 426,
        "url": "https://lh3.googleusercontent.com/bAh-T0gl6sZbqxBMW8trMTtM7pNN8HXImB1wgkiUD7CzUGVGkisZxgARXHDVyQ0TvYwtwObtYxplW7_hg67zgJcNTjdx"
      },
      "productionPlaces": [
        "Leiden",
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-206.222",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-206.222"
      },
      "id": "en-RP-P-OB-206.222",
      "objectNumber": "RP-P-OB-206.222",
      "title": "Water-zoogdieren",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Schuitemaker",
      "longTitle": "Water-zoogdieren, Jan Schuitemaker, 1850",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "724d19ab-e61b-43e7-8202-f00296bf8395",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh5.ggpht.com/CkVOxWXCuqJA-kaBBGxG2i86F5Gmo-SlQsXq-l0bdfbq1kRJ0i4l2AgDozR8f77pxC28JA1Qvo_3dTOaxKXY7yD53R50"
      },
      "headerImage": {
        "guid": "72279c31-3b20-48ba-9ef2-e8122aad024c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh5.ggpht.com/bLMhTNs6fSv6XVdaxtsyhwueT8A_bzk95piB3Idu0UCHGcCdRzEURBQ8eV58JibldPmYV9YPnouhQA7Mwdr6Jeq7JjA"
      },
      "productionPlaces": [
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-206.441",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-206.441"
      },
      "id": "en-RP-P-OB-206.441",
      "objectNumber": "RP-P-OB-206.441",
      "title": "Water-zoogdieren",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Schuitemaker",
      "longTitle": "Water-zoogdieren, Jan Schuitemaker, 1845",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "ba1f9ec0-fffe-4dc9-b731-a67f69b4219c",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh6.ggpht.com/bOFM7O2rn7KBucN40_FjDMZOKRDSlHdnRJXLpcUgc7CwbP4t9AJ-kQkBtqSk6gRyRaWOINVdkoZucEUPRaM03SY7qWM"
      },
      "headerImage": {
        "guid": "16b36c1b-cdfe-4db5-a0d8-c6f0ab805f1a",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/odnWh-0iWo_lyGGRz5gGunIMRAEOYo6cLXQY3X-ZEPcdAvG5TCyXiiyQLQ5oTwc38Pz4IrBRp6g8EzMFdgirPj5zWaHN"
      },
      "productionPlaces": [
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-OB-206.215",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-OB-206.215"
      },
      "id": "en-RP-P-OB-206.215",
      "objectNumber": "RP-P-OB-206.215",
      "title": "Water-zoogdieren",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Schuitemaker",
      "longTitle": "Water-zoogdieren, Jan Schuitemaker, 1850",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "5125aa9b-e2d5-448a-94c9-3302631d63fe",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh5.ggpht.com/dD9Tvdb-fHYK9lVS3ITXNqJlzR4Fn6SotPiAENL3QseUj-ueofQ3jnpX25l78hSMVsu2Hpyafo03nNu5kEhXOxZ_G-9C"
      },
      "headerImage": {
        "guid": "f8629879-39c8-4bd1-bf23-afd61f3949bd",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.ggpht.com/uJkJCKjRYea7-0cWJxZZBXxWUS4CNo7Rjxpqb74rpPPrOVoeV5BOTY0wjkbpg1XQ10diwRrI82LgclQsQOUjw3XuyX8"
      },
      "productionPlaces": [
        "Netherlands"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3036",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3036"
      },
      "id": "en-RP-P-1896-A-19368-3036",
      "objectNumber": "RP-P-1896-A-19368-3036",
      "title": "Paskaart van een deel van de Noorse kust",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Paskaart van een deel van de Noorse kust, Jan Luyken, 1681 - 1799",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "e3e1837e-5e9f-4bed-8da2-ce2cddac9f03",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2169,
        "height": 2169,
        "url": "https://lh3.googleusercontent.com/SKG5uFLjIYXdkkdxUU6hrkUlCcC8faW0F_uROQomomK99ay04rJG9QxDKwSagrG9iw8eEjsNa4ES6XJdNuQ7QfuI"
      },
      "headerImage": {
        "guid": "ac25d969-9a42-45bb-8eb2-fe87f9f2acc2",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/hwIkLNfoZOWaknxLQrnCXP0nzQTXcCz-px5OX8sqiVlp8nJlB6xIcEnffOAYARnc8-Gg7wjdhKl-x14HcLgo0vRkEg"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1985-386-75",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1985-386-75"
      },
      "id": "en-RP-P-1985-386-75",
      "objectNumber": "RP-P-1985-386-75",
      "title": "Portret van Giovanni Barbarigo, Neptunus en twee zeemeerminnen",
      "hasImage": true,
      "principalOrFirstMaker": "Robert van Audenaerd",
      "longTitle": "Portret van Giovanni Barbarigo, Neptunus en twee zeemeerminnen, Robert van Audenaerd, 1673 - 1743",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "7174ce24-6e55-4601-bb62-cceca9386ac4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2086,
        "height": 2086,
        "url": "https://lh3.googleusercontent.com/wLlPV44eXeBeV2JG8PDYirqllMqdpd2ikcODTE5VDcSht5WJSYW16GDU72Xqy4HXStG8Osrpl5E6DvizEAQcm86npSHi"
      },
      "headerImage": {
        "guid": "9f5d91c1-113f-433f-8a39-9753cd1ea475",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/rw7-P-3ym_IjtPo6Jpz_TWxI6qQUhM646h-3VVnkqxMlh8Z6kb9sj-E2eoZeupfy7_Isa7mhh-SRapMIQlhqBeYX4g"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/RP-P-1896-A-19368-3117",
        "web": "https://www.rijksmuseum.nl/en/collection/RP-P-1896-A-19368-3117"
      },
      "id": "en-RP-P-1896-A-19368-3117",
      "objectNumber": "RP-P-1896-A-19368-3117",
      "title": "Paskaart van de oostkust van Brazilië",
      "hasImage": true,
      "principalOrFirstMaker": "Jan Luyken",
      "longTitle": "Paskaart van de oostkust van Brazilië, Jan Luyken, 1683 - 1799",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "b2a38f59-35f7-4f11-80ed-4d31d5b39c23",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2190,
        "height": 2190,
        "url": "https://lh3.googleusercontent.com/QePyIXGSZsoQ2GzotMJWKd1w6Hkkoy20Ya5VWFe0MDE9ofYbWezk0CjHGadRcaA5pmkmyhLU-rkW9dCSmmcc1vaDnI0w"
      },
      "headerImage": {
        "guid": "72bb6b4e-4d5a-4061-854a-2f7cd8fe53de",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/csx8dVUt6_2gWi5Nt66ojERo3IaRgrnQp_Ryj9ylaHE-cchUut2H13pb6P0PhUPbtGLZFIvg2xYRGoEaTH2IUNu06tk"
      },
      "productionPlaces": [
        "Amsterdam"
      ]
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/SK-A-4643",
        "web": "https://www.rijksmuseum.nl/en/collection/SK-A-4643"
      },
      "id": "en-SK-A-4643",
      "objectNumber": "SK-A-4643",
      "title": "The Arms of the Dutch East India Company and of the Town of Batavia",
      "hasImage": true,
      "principalOrFirstMaker": "Jeronimus Becx (II)",
      "longTitle": "The Arms of the Dutch East India Company and of the Town of Batavia, Jeronimus Becx (II), 1651",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "eb131083-91fa-4998-a56f-d5bef30645dc",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 1578,
        "height": 1578,
        "url": "https://lh3.googleusercontent.com/BubZJj29Rj38aYg6d353X3UbdAzClkr1lQN3Q_EsD4pbRQigE-xXkso2UrbiXRx35TbF11tChGh7oO3oj0eUda_hKfE"
      },
      "headerImage": {
        "guid": "8b501558-02a6-4fae-838d-a6d2161662c4",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 460,
        "height": 460,
        "url": "https://lh3.googleusercontent.com/ZyYnVstIP84IQLzUWcVcUbepM4-53YNh9i11_TNHO_lGXE3JNW-hJE0PMO3m5QILHKGNhFtwOFq7TSbjxj49p7YB65A"
      },
      "productionPlaces": []
    },
    {
      "links": {
        "self": "https://www.rijksmuseum.nl/api/en/collection/BK-2013-3",
        "web": "https://www.rijksmuseum.nl/en/collection/BK-2013-3"
      },
      "id": "en-BK-2013-3",
      "objectNumber": "BK-2013-3",
      "title": "Vase",
      "hasImage": true,
      "principalOrFirstMaker": "Antoine Vechte",
      "longTitle": "Vase, Antoine Vechte, 1843",
      "showImage": false,
      "permitDownload": false,
      "webImage": {
        "guid": "7cb4f510-256a-4f27-b59f-80c114fa2638",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 2500,
        "height": 2500,
        "url": "https://lh3.ggpht.com/Yc-HtkX0nOarzL_27SCtFZgSb-uHM1untzybgVvwyv-q6ZFDL9KDwuFfYD7RpoDp1b4ImA1TMxrX5kyMeDGUiIKkeI0"
      },
      "headerImage": {
        "guid": "5b752dd5-02f5-40c6-bce4-810dfe2ce50f",
        "offsetPercentageX": 0,
        "offsetPercentageY": 0,
        "width": 449,
        "height": 449,
        "url": "https://lh4.ggpht.com/d_vVlAdmZWNXPYWAYaEAmAZj6fiWpvA9P4pnGkxwTvM-kCmlwVQgJ4T-rbGsHuyr3nw-JlBaZSH7jD_9vvzasQBA1y0"
      },
      "productionPlaces": [
        "Paris"
      ]
    }
  ],
  "facets": [
    {
      "facets": [
        {
          "key": "anonymous",
          "value": 10
        },
        {
          "key": "Jan Luyken",
          "value": 9
        },
        {
          "key": "Johannes Josephus Aarts",
          "value": 7
        },
        {
          "key": "Stefano della Bella",
          "value": 4
        },
        {
          "key": "Jan Schuitemaker",
          "value": 3
        },
        {
          "key": "Adriaen Collaert",
          "value": 2
        },
        {
          "key": "Carel Adolph Lion Cachet",
          "value": 2
        },
        {
          "key": "Dirk Noothoven van Goor",
          "value": 2
        },
        {
          "key": "Gabriel Huquier",
          "value": 2
        },
        {
          "key": "Hubert Quellinus",
          "value": 2
        },
        {
          "key": "Jacques Callot",
          "value": 2
        },
        {
          "key": "Juste Nathan François Boucher",
          "value": 2
        },
        {
          "key": "Leendert Claesz",
          "value": 2
        },
        {
          "key": "Aegidius Sadeler",
          "value": 1
        },
        {
          "key": "Anthonie de Winter",
          "value": 1
        },
        {
          "key": "Antoine Vechte",
          "value": 1
        },
        {
          "key": "Carl Albert von Lespilliez",
          "value": 1
        },
        {
          "key": "Caspar Jacobsz. Philips",
          "value": 1
        },
        {
          "key": "Christiaan Lodewijk van Kesteren",
          "value": 1
        },
        {
          "key": "Claude Dominique Vinsac",
          "value": 1
        },
        {
          "key": "Cornelis Bos",
          "value": 1
        },
        {
          "key": "Damiano Pernati",
          "value": 1
        },
        {
          "key": "Jacobus Conynenberg",
          "value": 1
        },
        {
          "key": "Jacques Juillet",
          "value": 1
        },
        {
          "key": "Jan Wandelaar",
          "value": 1
        },
        {
          "key": "Jean Pelletier",
          "value": 1
        },
        {
          "key": "Jeronimus Becx (II)",
          "value": 1
        },
        {
          "key": "Johann Friedrich Greuter",
          "value": 1
        },
        {
          "key": "Josua de Grave",
          "value": 1
        },
        {
          "key": "L. Laurent",
          "value": 1
        },
        {
          "key": "Laurent Guyot",
          "value": 1
        },
        {
          "key": "Michiel le Blon",
          "value": 1
        },
        {
          "key": "Nicolas Dupin",
          "value": 1
        },
        {
          "key": "Nicolas Guérard",
          "value": 1
        },
        {
          "key": "Odilon Redon",
          "value": 1
        },
        {
          "key": "Patrick Begbie",
          "value": 1
        },
        {
          "key": "Pierre Gabriel Berthault",
          "value": 1
        },
        {
          "key": "Robert van Audenaerd",
          "value": 1
        },
        {
          "key": "Samuel Bourne",
          "value": 1
        },
        {
          "key": "unknown",
          "value": 1
        }
      ],
      "name": "principalMaker",
      "otherTerms": 76,
      "prettyName": 10
    },
    {
      "facets": [
        {
          "key": "print",
          "value": 64
        },
        {
          "key": "cup",
          "value": 1
        },
        {
          "key": "drawing",
          "value": 1
        },
        {
          "key": "family arms",
          "value": 1
        },
        {
          "key": "painting",
          "value": 1
        },
        {
          "key": "photograph",
          "value": 1
        },
        {
          "key": "vase",
          "value": 1
        }
      ],
      "name": "type",
      "otherTerms": 0,
      "prettyName": 3
    },
    {
      "facets": [
        {
          "key": "17",
          "value": 27
        },
        {
          "key": "18",
          "value": 22
        },
        {
          "key": "19",
          "value": 19
        },
        {
          "key": "16",
          "value": 5
        },
        {
          "key": "20",
          "value": 2
        },
        {
          "key": "15",
          "value": 1
        }
      ],
      "name": "dating.period",
      "otherTerms": 0,
      "prettyName": 4
    },
    {
      "facets": [
        {
          "key": "Paris",
          "value": 20
        },
        {
          "key": "Amsterdam",
          "value": 17
        },
        {
          "key": "Netherlands",
          "value": 8
        },
        {
          "key": "France",
          "value": 7
        },
        {
          "key": "Antwerp",
          "value": 2
        },
        {
          "key": "Germany",
          "value": 2
        },
        {
          "key": "Italy",
          "value": 2
        },
        {
          "key": "Leiden",
          "value": 2
        },
        {
          "key": "? Amsterdam",
          "value": 1
        },
        {
          "key": "London",
          "value": 1
        },
        {
          "key": "Northern Netherlands",
          "value": 1
        },
        {
          "key": "Utrecht",
          "value": 1
        },
        {
          "key": "unknown",
          "value": 1
        }
      ],
      "name": "place",
      "otherTerms": 0,
      "prettyName": 2
    },
    {
      "facets": [
        {
          "key": "paper",
          "value": 66
        },
        {
          "key": "silver (metal)",
          "value": 4
        },
        {
          "key": "Japanese paper (handmade paper)",
          "value": 2
        },
        {
          "key": "chalk",
          "value": 2
        },
        {
          "key": "gilding (material)",
          "value": 2
        },
        {
          "key": "ink",
          "value": 2
        },
        {
          "key": "pencil",
          "value": 2
        },
        {
          "key": "pipe clay",
          "value": 2
        },
        {
          "key": "copper alloy",
          "value": 1
        },
        {
          "key": "nautilus shell",
          "value": 1
        },
        {
          "key": "oil paint (paint)",
          "value": 1
        },
        {
          "key": "panel",
          "value": 1
        }
      ],
      "name": "material",
      "otherTerms": 0,
      "prettyName": 5
    },
    {
      "facets": [
        {
          "key": "etching",
          "value": 45
        },
        {
          "key": "engraving",
          "value": 27
        },
        {
          "key": "pen",
          "value": 2
        },
        {
          "key": "albumen print",
          "value": 1
        },
        {
          "key": "brush",
          "value": 1
        }
      ],
      "name": "technique",
      "otherTerms": 0,
      "prettyName": 8
    },
    {
      "facets": [
        {
          "key": " #737C84",
          "value": 11
        },
        {
          "key": "#FBF6E1",
          "value": 9
        },
        {
          "key": " #2F4F4F",
          "value": 7
        },
        {
          "key": " #E0CC91",
          "value": 4
        },
        {
          "key": " #000000",
          "value": 3
        },
        {
          "key": " #B5BFCC",
          "value": 3
        },
        {
          "key": "#E0CC91",
          "value": 3
        },
        {
          "key": " #B35A1F",
          "value": 2
        },
        {
          "key": " #FBF6E1",
          "value": 2
        },
        {
          "key": " #367614",
          "value": 1
        },
        {
          "key": " #F6ECF3",
          "value": 1
        }
      ],
      "name": "normalized32Colors.hex",
      "otherTerms": 46,
      "prettyName": 9
    }
  ]
}
    http_version: 
  recorded_at: Tue, 22 May 2018 00:00:30 GMT
recorded_with: VCR 4.0.0
